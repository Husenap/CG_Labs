name: build

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]
    
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Ubuntu Packages
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: sudo apt-get install -y libassimp-dev libglfw3-dev

    - name: Setup MSBuild
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1

    - name: Install Windows packages
      if: matrix.os == 'windows-latest'
      shell: bash
      run: |
        vcpkg install assimp
        vcpkg install glfw3
        vcpkg install glm

    - name: Generate
      shell: bash
      run: cmake -B.build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      
    - name: Build
      shell: bash
      run: cmake --build .build/
